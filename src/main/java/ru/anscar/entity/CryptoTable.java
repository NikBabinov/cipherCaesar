package ru.anscar.entity;

public class CryptoTable {
    private static ru.anscar.entity.CryptoTable INSTANCE;

    private static final char[] tableEncode = {'À', 'Á', 'Â', 'Ã', 'Ä', 'Å', '¨', 'Æ', 'Ç',
            'È', 'É', 'Ê', 'Ë', 'Ì', 'Í', 'Î', 'Ï', 'Ð', 'Ñ', 'Ò', 'Ó', 'Ô', 'Õ', 'Ö', '×', 'Ø', 'Ù',
            'Ú', 'Û', 'Ü', 'Ý', 'Þ', 'ß', 'à', 'á', 'â', 'ã', 'ä', 'å', '¸', 'æ', 'ç',
            'è', 'é', 'ê', 'ë', 'ì', 'í', 'î', 'ï', 'ð', 'ñ', 'ò', 'ó', 'ô', 'õ', 'ö', '÷', 'ø', 'ù',
            'ú', 'û', 'ü', 'ý', 'þ', 'ÿ', '.', ',', '«', '»', '"', '\'', ':', '!', '?', ';', '-', ' ', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9',
            '\\', '/', '+', '=', '%', '(', ')', '*', '¹', '<', '>'};

    public synchronized static ru.anscar.entity.CryptoTable getInstance() {
        if (INSTANCE == null) {
            INSTANCE = new ru.anscar.entity.CryptoTable();
        }
        return INSTANCE;
    }

    public String getLengthTable() {
        return Integer.toString(tableEncode.length);
    }
}

